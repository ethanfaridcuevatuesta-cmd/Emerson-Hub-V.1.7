-- Emerson Hub v1.7 - Cliente (LocalScript)
-- Versi√≥n actualizada: se RETIRA la opci√≥n Aimbot y se CORRIGE Highest Value (cliente-side scan).
-- Mantiene todas las configuraciones del panel (arrastrable, minimizar al icono diente, scroll, colores, mensajes).
-- Pega este LocalScript en StarterPlayerScripts o ejec√∫talo en tu executor de confianza.

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer

-- ===== Estado persistente (sobrevive a respawns) =====
local savedPos = nil
local multiJumpEnabled = false
local jumps = 0
local maxJumps = 3
local speedBoostEnabled = false
local noclipEnabled = false
local highestEnabled = false

local currentChar = player.Character
local currentHumanoid = currentChar and currentChar:FindFirstChildOfClass("Humanoid")
local currentRoot = currentChar and currentChar:FindFirstChild("HumanoidRootPart")

local function rebindCharacter(char)
    currentChar = char
    currentHumanoid = char:FindFirstChildOfClass("Humanoid") or char:WaitForChild("Humanoid")
    currentRoot = char:FindFirstChild("HumanoidRootPart") or char:WaitForChild("HumanoidRootPart")
    -- reapply states
    if speedBoostEnabled and currentHumanoid then
        pcall(function() currentHumanoid.WalkSpeed = 48 end)
    else
        pcall(function() if currentHumanoid then currentHumanoid.WalkSpeed = 16 end end)
    end
    if noclipEnabled then
        for _,name in pairs({"HumanoidRootPart","Torso","UpperTorso","LowerTorso","Head"}) do
            local p = currentChar:FindFirstChild(name)
            if p and p:IsA("BasePart") then p.CanCollide = false end
        end
    end
end

player.CharacterAdded:Connect(function(ch) rebindCharacter(ch) end)
if player.Character then rebindCharacter(player.Character) end

-- ===== Mensajes (UI) =====
local function ShowMessage(txt, t)
    t = t or 2
    local gui = player:FindFirstChild("PlayerGui")
    if not gui then return end
    local ScreenGui = gui:FindFirstChild("EmersonHub_MsgGui")
    if not ScreenGui then
        ScreenGui = Instance.new("ScreenGui")
        ScreenGui.Name = "EmersonHub_MsgGui"
        ScreenGui.ResetOnSpawn = false
        ScreenGui.Parent = gui
    end
    local msg = Instance.new("Frame", ScreenGui)
    msg.Size = UDim2.new(0, 260, 0, 36)
    msg.Position = UDim2.new(0.5, -130, 0.82, 0)
    msg.BackgroundColor3 = Color3.fromRGB(0,0,0)
    msg.BackgroundTransparency = 0.35
    local rc = Instance.new("UICorner", msg); rc.CornerRadius = UDim.new(0,6)
    local lbl = Instance.new("TextLabel", msg)
    lbl.Size = UDim2.new(1,-12,1,0)
    lbl.Position = UDim2.new(0,6,0,0)
    lbl.BackgroundTransparency = 1
    lbl.Font = Enum.Font.SourceSans
    lbl.TextScaled = true
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.Text = txt
    TweenService:Create(msg, TweenInfo.new(0.25), {BackgroundTransparency = 0.6}):Play()
    task.delay(t, function() if msg and msg.Parent then msg:Destroy() end end)
end

-- ===== UI: panel compacto, minimizable al icono diente, draggable y scroll =====
local function createUI()
    local gui = Instance.new("ScreenGui")
    gui.Name = "EmersonHub_v1_7_Client"
    gui.ResetOnSpawn = false
    gui.Parent = player:WaitForChild("PlayerGui")

    local frame = Instance.new("Frame", gui)
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 260, 0, 300)
    frame.Position = UDim2.new(0.35, 0, 0.22, 0)
    frame.BackgroundColor3 = Color3.fromRGB(255,255,255)
    frame.BorderSizePixel = 0
    local rc = Instance.new("UICorner", frame); rc.CornerRadius = UDim.new(0,8)

    local titleBar = Instance.new("Frame", frame)
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1,0,0,36)
    titleBar.Position = UDim2.new(0,0,0,0)
    titleBar.BackgroundTransparency = 1

    local titleLabel = Instance.new("TextLabel", titleBar)
    titleLabel.Size = UDim2.new(0.82,0,1,0)
    titleLabel.Position = UDim2.new(0,6,0,0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.Gotham
    titleLabel.TextScaled = true
    titleLabel.Text = "ü¶∑ Emerson Hub ‚Äî v1.7"
    titleLabel.TextColor3 = Color3.fromRGB(0,0,0)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local toothBtn = Instance.new("TextButton", titleBar)
    toothBtn.Size = UDim2.new(0.18, -8, 0.9, 0)
    toothBtn.Position = UDim2.new(0.82, 4, 0.05, 0)
    toothBtn.Text = "ü¶∑"
    toothBtn.Font = Enum.Font.SourceSans
    toothBtn.TextScaled = true
    toothBtn.BackgroundTransparency = 1

    local miniBtn = Instance.new("TextButton", gui)
    miniBtn.Name = "MiniBtn"
    miniBtn.Size = UDim2.new(0, 44, 0, 44)
    miniBtn.Position = UDim2.new(0.35, 0, 0.22, 0)
    miniBtn.Text = "ü¶∑"
    miniBtn.Font = Enum.Font.SourceSans
    miniBtn.TextScaled = true
    miniBtn.BackgroundTransparency = 0.2
    miniBtn.Visible = false
    local miniRC = Instance.new("UICorner", miniBtn); miniRC.CornerRadius = UDim.new(0,8)

    local Scroll = Instance.new("ScrollingFrame", frame)
    Scroll.Name = "OptionsScroll"
    Scroll.Size = UDim2.new(1, -16, 1, -56)
    Scroll.Position = UDim2.new(0,8,0,40)
    Scroll.BackgroundTransparency = 1
    Scroll.ScrollBarThickness = 6
    local layout = Instance.new("UIListLayout", Scroll); layout.Padding = UDim.new(0,8); layout.SortOrder = Enum.SortOrder.LayoutOrder
    local pad = Instance.new("UIPadding", Scroll); pad.PaddingLeft = UDim.new(0,6); pad.PaddingRight = UDim.new(0,6); pad.PaddingTop = UDim.new(0,6)

    -- rainbow driver
    local rainbow = {h = 0, col = Color3.fromRGB(255,0,0)}
    task.spawn(function()
        while true do
            rainbow.h = (rainbow.h + 3) % 360
            rainbow.col = Color3.fromHSV(rainbow.h/360, 1, 1)
            task.wait(0.04)
        end
    end)

    -- helper to create option row (plomo rect + rainbow border + textbutton)
    local function CreateOption(name, callback)
        local rect = Instance.new("Frame", Scroll)
        rect.Name = "OptRect_"..name:gsub("%s+","")
        rect.Size = UDim2.new(1,0,0,36)
        rect.BackgroundColor3 = Color3.fromRGB(119,136,153)
        rect.BorderSizePixel = 0
        local rcc = Instance.new("UICorner", rect); rcc.CornerRadius = UDim.new(0,6)
        local stroke = Instance.new("UIStroke", rect); stroke.Thickness = 2
        local btn = Instance.new("TextButton", rect)
        btn.Size = UDim2.new(1,-8,1,-8); btn.Position = UDim2.new(0,4,0,4)
        btn.BackgroundTransparency = 1
        btn.Font = Enum.Font.SourceSans
        btn.TextScaled = true
        btn.Text = name
        btn.TextColor3 = rainbow.col
        btn.AutoButtonColor = true
        btn.MouseButton1Click:Connect(function() callback(btn) end)
        task.spawn(function()
            while rect.Parent do
                stroke.Color = rainbow.col
                if btn.Parent then btn.TextColor3 = rainbow.col end
                task.wait(0.04)
            end
        end)
        return rect, btn
    end

    -- draggable
    local dragging, dragStart, startPos
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    UIS.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- minimize/restore
    local minimized = false
    local function minimize()
        minimized = true
        frame.Visible = false
        miniBtn.Position = frame.Position
        miniBtn.Visible = true
    end
    local function restore()
        minimized = false
        frame.Visible = true
        miniBtn.Visible = false
    end
    toothBtn.MouseButton1Click:Connect(function()
        if minimized then restore() else minimize() end
    end)
    miniBtn.MouseButton1Click:Connect(function() restore() end)

    return {
        Gui = gui,
        Frame = frame,
        Scroll = Scroll,
        CreateOption = CreateOption
    }
end

local UI = createUI()

-- ===== Mantener las opciones previas (sin modificar su l√≥gica) =====
UI.CreateOption("Guardar TP 1", function()
    if currentRoot and currentRoot.CFrame then
        savedPos = currentRoot.CFrame
        ShowMessage("üìç TP 1 guardado")
    else
        ShowMessage("‚ö†Ô∏è No se pudo guardar posici√≥n")
    end
end)

UI.CreateOption("Ir a TP 1", function()
    if savedPos and currentRoot then
        local ok, err = pcall(function() currentRoot.CFrame = savedPos end)
        if ok then ShowMessage("‚úÖ Teletransportado a TP 1") else ShowMessage("‚ùå No se pudo teletransportar") end
    else
        ShowMessage("‚ö†Ô∏è No hay TP guardado")
    end
end)

UI.CreateOption("Multi Jump", function()
    multiJumpEnabled = not multiJumpEnabled
    ShowMessage(multiJumpEnabled and "üü¢ Multi Jump activado" or "üî¥ Multi Jump desactivado")
end)

UI.CreateOption("Speed Boost", function()
    speedBoostEnabled = not speedBoostEnabled
    if currentHumanoid and currentHumanoid.Parent then
        pcall(function() currentHumanoid.WalkSpeed = speedBoostEnabled and 48 or 16 end)
    end
    ShowMessage(speedBoostEnabled and "üü¢ Speed Boost activado" or "üî¥ Speed Boost desactivado")
end)

UI.CreateOption("Noclip", function()
    noclipEnabled = not noclipEnabled
    ShowMessage(noclipEnabled and "üü¢ Noclip activado" or "üî¥ Noclip desactivado")
end)

-- Nota: opci√≥n Aimbot REMOVIDA en v1.7 seg√∫n tu pedido (no se crea la fila).

-- ===== Highest Value (arreglado) =====
-- Reglas:
--  - Busca objetos en workspace.DevTestBases si existe; si no, escanea workspace.
--  - Detecta NumberValue llamado "ValuePerSecond" (o atributo "ValuePerSecond") en el Model o en cualquiera de sus descendientes.
--  - Excluye objetos cuyo OwnerUserId (NumberValue/IntValue o atributo) == player.UserId.
--  - Muestra un Billboard grande (solo client-side) encima del objeto con mayor valor.
--  - Mantiene/limpia visuales correctamente al cambiar/join/respawn.

local highestBillboardName = "Emerson_HighestBB_v1_7"
local currentHighest = nil

local function findValuePerSecondInInstance(inst)
    -- Busca NumberValue/IntValue llamado "ValuePerSecond" en la instancia o sus hijos
    if not inst then return nil end
    local v
    v = inst:FindFirstChild("ValuePerSecond")
    if v and (v:IsA("NumberValue") or v:IsA("IntValue")) and typeof(v.Value) == "number" then
        return v.Value
    end
    -- Revisar atributos
    local attr = inst:GetAttribute and inst:GetAttribute("ValuePerSecond")
    if type(attr) == "number" then return attr end
    -- Buscar en descendientes (priorizar NumberValue directos)
    for _,d in pairs(inst:GetDescendants()) do
        if d:IsA("NumberValue") or d:IsA("IntValue") then
            if d.Name == "ValuePerSecond" and typeof(d.Value) == "number" then
                return d.Value
            end
        end
    end
    return nil
end

local function findOwnerInInstance(inst)
    if not inst then return nil end
    local o = inst:FindFirstChild("OwnerUserId")
    if o and (o:IsA("NumberValue") or o:IsA("IntValue")) and typeof(o.Value) == "number" then
        return o.Value
    end
    local attr = inst.GetAttribute and inst:GetAttribute("OwnerUserId")
    if type(attr) == "number" then return attr end
    for _,d in pairs(inst:GetDescendants()) do
        if d:IsA("NumberValue") or d:IsA("IntValue") then
            if d.Name == "OwnerUserId" and typeof(d.Value) == "number" then
                return d.Value
            end
        end
    end
    return nil
end

local function getRepresentativePart(inst)
    if not inst then return nil end
    if inst:IsA("BasePart") then return inst end
    if inst.PrimaryPart and inst.PrimaryPart:IsA("BasePart") then return inst.PrimaryPart end
    for _,d in pairs(inst:GetDescendants()) do
        if d:IsA("BasePart") then return d end
    end
    return nil
end

local function clearHighestVisual()
    if currentHighest and currentHighest.Parent then
        for _,c in pairs(currentHighest:GetDescendants()) do
            if c:IsA("BillboardGui") and c.Name == highestBillboardName then
                c:Destroy()
            end
        end
    end
    currentHighest = nil
end

local function createHighestVisual(inst, text)
    if not inst or not inst.Parent then return end
    clearHighestVisual()
    local part = getRepresentativePart(inst)
    if not part then return end
    local bb = Instance.new("BillboardGui")
    bb.Name = highestBillboardName
    bb.Size = UDim2.new(0, 380, 0, 110)
    bb.StudsOffset = Vector3.new(0, 5.2, 0)
    bb.AlwaysOnTop = true
    bb.Parent = inst
    local lbl = Instance.new("TextLabel", bb)
    lbl.Size = UDim2.new(1,0,1,0)
    lbl.BackgroundTransparency = 0.6
    lbl.Font = Enum.Font.GothamBlack
    lbl.TextScaled = true
    lbl.TextColor3 = Color3.fromRGB(255,255,255)
    lbl.Text = text or (inst.Name or "Top")
    local rc = Instance.new("UICorner", lbl); rc.CornerRadius = UDim.new(0,10)
    currentHighest = inst
end

local function scanForHighest()
    local folder = workspace:FindFirstChild("DevTestBases")
    local searchList = {}
    if folder and folder.Parent then
        for _,c in pairs(folder:GetChildren()) do table.insert(searchList, c) end
    else
        -- si no existe la carpeta, escanear objetos visibles en workspace
        for _,c in pairs(workspace:GetDescendants()) do
            if (c:IsA("Model") or c:IsA("BasePart")) and c.Parent and c ~= workspace.Terrain then
